/*{-{*/

class Single with
    event void   go;
    var   UI*    ui;
    var   _char* name;
do
    name = null;

    var LuaGrid list_tot;
    var LuaGrid list;
    this.ui = &list_tot.grid;

    var UIScroll scroll;
        scroll.ui = &list.grid;
        // clr
            scroll.scroll_clr.r = 0x20;
            scroll.scroll_clr.g = 0x20;
            scroll.scroll_clr.b = 0x20;
    emit scroll.go;

    await/0 go;
        _assert(name != null);

    var _lua_State* lua = global:lua;

    // LIST
    _lua_getglobal(lua, "f_grid_list"); // [ f ]
    _lua_getglobal(lua, name);          // [ f | list ]
    _lua_call(lua, 1, 2);               // [ grid | tot ]
    var _float tot = _lua_tonumber(lua, -1);
    _lua_pop(lua, 1);                   // [ grid ]
    list.ref = _luaL_ref(lua, _LUA_REGISTRYINDEX);
    emit list.go;                       // [ ]

    // LIST_TOT
    _lua_getglobal(lua, "f_grid_tot");  // [ f ]
    _lua_pushnumber(lua, tot);          // [ f | tot ]
    _lua_call(lua, 1, 1);               // [ grid ]
    list_tot.ref = _luaL_ref(lua, _LUA_REGISTRYINDEX);
    emit list_tot.go;                   // [ ]
    list_tot.grid.uis[0] = &scroll;

    // remove
    loop do
        var int opt = await list.grid.ok_uiclicked;
        var int col = (opt-1) % 3 + 1;      // 1, 2, or 3
        var int lin = (opt-1) / 3 + 1;      // 1, ..., N

        if col == 3 then          // remove
            emit global:go_sound = global:snd_rem;
            _lua_getglobal(lua, "t_remove");    // [ t_rem ]
            _lua_getglobal(lua, name);          // [ t_rem | L ]
            _lua_pushnumber(lua, lin);          // [ t_rem | L | lin ]
            _lua_call(lua, 2, 0);               // [ ]
            emit global:go_opt;
        end
    end
finally
    // pushlightuserdata
end

/*}-}*/ dnl
