/*{-{*/

class Find with
    event void  go;
    var   UI*   ui;
    var  _char* str;
do
    var LuaGrid find;

    var UIScroll scroll;
        scroll.ui = &find.grid;
        // clr
            scroll.scroll_clr.r = 0x20;
            scroll.scroll_clr.g = 0x20;
            scroll.scroll_clr.b = 0x20;

    this.ui = &scroll;
    emit scroll.go;

    var int res = _LUA_NOREF;   // list of results

    await/0 go;
        _assert(str != null);

    var _lua_State* lua = global:lua;
    _lua_getglobal(lua, "f_grid_find"); // [ f ]
    _lua_pushstring(lua, str);          // [ f | name ]
    _lua_call(lua, 1, 2);               // [ t | grid ]
    find.ref = _luaL_ref(lua, _LUA_REGISTRYINDEX); // [ t ]
    res = _luaL_ref(lua, _LUA_REGISTRYINDEX);    // []
    emit find.go;

//_lua_pop(lua, 1);
//_luaL_dofile(lua, "lua/test.lua");

    // "add" listener
    loop do
        var int opt = await find.grid.ok_uiclicked;
        var int col = (opt-1) % 4 + 1;      // 1, 2, 3, or 4
        var int lin = (opt-1) / 4 + 1;      // 1, ..., N

        _lua_rawgeti(lua, _LUA_REGISTRYINDEX, res); // [ t ]

        if col > 2 then     // added
            emit global:go_sound = global:snd_add;
            if col == 3 then
                _lua_getglobal(lua, "L1");          // [ t | L ]
            else
                _lua_getglobal(lua, "L2");          // [ t | L ]
            end
            var int n = _lua_objlen(lua, -1);       // [ t | L ]
            _lua_rawgeti(lua, -2, lin);             // [ t | L | card ]
            _lua_rawseti(lua, -2, n+1);             // [ t | L ]
            _lua_pop(lua, 1);                       // [ t ]
        end

        _lua_pop(lua, 1);                           // [ ]
    end
finally
    _luaL_unref(lua, _LUA_REGISTRYINDEX, res);
end

/*}-}*/ dnl
